<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.infosys.feed.repository.FeedRepository"/>
<fullyQualifiedTypeName name="com.infosys.feed.entity.Feed"/>
<fullyQualifiedTypeName name="com.infosys.feed.service.FeedService"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.springframework.web.util.UriComponentsBuilder"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.support.ServletUriComponentsBuilder"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.web.context.support.GenericWebApplicationContext"/>
<fullyQualifiedTypeName name="com.infosys.kafka.config.TopicAdministrator"/>
<fullyQualifiedTypeName name="javax.annotation.PostConstruct"/>
<fullyQualifiedTypeName name="com.infosys.kafka.config.TopicConfigurations.TopicConfiguration"/>
<fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
<fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
<fullyQualifiedTypeName name="org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent"/>
<fullyQualifiedTypeName name="org.springframework.context.event.EventListener"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="org.springframework.util.concurrent.ListenableFuture"/>
<fullyQualifiedTypeName name="org.springframework.util.concurrent.ListenableFutureCallback"/>
<fullyQualifiedTypeName name="org.springframework.util.concurrent.SuccessCallback"/>
<fullyQualifiedTypeName name="org.springframework.util.concurrent.FailureCallback"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
<fullyQualifiedTypeName name="org.apache.kafka.clients.producer.Partitioner"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="com.infosys.kafka.producer.FeedPartitioner"/>
<fullyQualifiedTypeName name="com.infosys.rss.repository.FeedRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.infosys.rss.model.Feed"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.infosys.rss.service.FeedService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.ribbon.RibbonClient"/>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
<fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
<fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.RequestHandlerSelectors"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.PathSelectors"/>
<fullyQualifiedTypeName name="springfox.documentation.builders.ApiInfoBuilder"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
</qualifiedTypeNameHistroy>
